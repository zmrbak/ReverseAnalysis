; Listing generated by Microsoft (R) Optimizing Compiler Version 19.26.28720.3 

	TITLE	C:\Users\libit\source\repos\REV_059\REV_059\REV_059.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG31702 DB	'Hello World!', 0aH, 00H
	ORG $+2
$SG31703 DB	'%lld', 0aH, 00H
	ORG $+2
$SG31704 DB	'%I64d', 0aH, 00H
	ORG $+1
$SG31705 DB	'Hello World 1!', 0aH, 00H
$SG31706 DB	'%lld', 0aH, 00H
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	?f@@YA_KXZ					; f
PUBLIC	?f_add@@YA_K_K0@Z				; f_add
PUBLIC	?f_sub@@YA_K_K0@Z				; f_sub
PUBLIC	?f_multi@@YA_K_K0@Z				; f_multi
PUBLIC	?f_div@@YA_K_K0@Z				; f_div
PUBLIC	?f_left@@YA_K_K0@Z				; f_left
PUBLIC	?f_right@@YA_K_K0@Z				; f_right
PUBLIC	_main
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
EXTRN	___acrt_iob_func:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	__allmul:PROC
EXTRN	__allshl:PROC
EXTRN	__aulldiv:PROC
EXTRN	__aullshr:PROC
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_main	PROC
; File C:\Users\libit\source\repos\REV_059\REV_059\REV_059.cpp
; Line 42
	push	OFFSET $SG31702
	call	_printf
; Line 45
	push	305419896				; 12345678H
	push	-1867788817				; 90abcdefH
	push	OFFSET $SG31703
	call	_printf
; Line 46
	push	305419896				; 12345678H
	push	-1867788817				; 90abcdefH
	push	OFFSET $SG31704
	call	_printf
; Line 48
	push	OFFSET $SG31705
	call	_printf
; Line 50
	push	858993460				; 33333334H
	push	-286331155				; eeeeeeedH
	push	OFFSET $SG31706
	call	_printf
	add	esp, 44					; 0000002cH
; Line 51
	xor	eax, eax
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_a$ = 8							; size = 8
_b$ = 16						; size = 8
?f_right@@YA_K_K0@Z PROC				; f_right
; File C:\Users\libit\source\repos\REV_059\REV_059\REV_059.cpp
; Line 37
	mov	eax, DWORD PTR _a$[esp-4]
	mov	edx, DWORD PTR _a$[esp]
	mov	ecx, DWORD PTR _b$[esp-4]
	jmp	__aullshr
?f_right@@YA_K_K0@Z ENDP				; f_right
_TEXT	ENDS
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_a$ = 8							; size = 8
_b$ = 16						; size = 8
?f_left@@YA_K_K0@Z PROC					; f_left
; File C:\Users\libit\source\repos\REV_059\REV_059\REV_059.cpp
; Line 32
	mov	eax, DWORD PTR _a$[esp-4]
	mov	edx, DWORD PTR _a$[esp]
	mov	ecx, DWORD PTR _b$[esp-4]
	jmp	__allshl
?f_left@@YA_K_K0@Z ENDP					; f_left
_TEXT	ENDS
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_a$ = 8							; size = 8
_b$ = 16						; size = 8
?f_div@@YA_K_K0@Z PROC					; f_div
; File C:\Users\libit\source\repos\REV_059\REV_059\REV_059.cpp
; Line 27
	push	DWORD PTR _b$[esp]
	push	DWORD PTR _b$[esp]
	push	DWORD PTR _a$[esp+8]
	push	DWORD PTR _a$[esp+8]
	call	__aulldiv
; Line 28
	ret	0
?f_div@@YA_K_K0@Z ENDP					; f_div
_TEXT	ENDS
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_a$ = 8							; size = 8
_b$ = 16						; size = 8
?f_multi@@YA_K_K0@Z PROC				; f_multi
; File C:\Users\libit\source\repos\REV_059\REV_059\REV_059.cpp
; Line 22
	push	DWORD PTR _b$[esp]
	push	DWORD PTR _b$[esp]
	push	DWORD PTR _a$[esp+8]
	push	DWORD PTR _a$[esp+8]
	call	__allmul
; Line 23
	ret	0
?f_multi@@YA_K_K0@Z ENDP				; f_multi
_TEXT	ENDS
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_a$ = 8							; size = 8
_b$ = 16						; size = 8
?f_sub@@YA_K_K0@Z PROC					; f_sub
; File C:\Users\libit\source\repos\REV_059\REV_059\REV_059.cpp
; Line 17
	mov	eax, DWORD PTR _a$[esp-4]
	sub	eax, DWORD PTR _b$[esp-4]
	mov	edx, DWORD PTR _a$[esp]
	sbb	edx, DWORD PTR _b$[esp]
; Line 18
	ret	0
?f_sub@@YA_K_K0@Z ENDP					; f_sub
_TEXT	ENDS
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_a$ = 8							; size = 8
_b$ = 16						; size = 8
?f_add@@YA_K_K0@Z PROC					; f_add
; File C:\Users\libit\source\repos\REV_059\REV_059\REV_059.cpp
; Line 12
	mov	eax, DWORD PTR _a$[esp-4]
	add	eax, DWORD PTR _b$[esp-4]
	mov	edx, DWORD PTR _a$[esp]
	adc	edx, DWORD PTR _b$[esp]
; Line 13
	ret	0
?f_add@@YA_K_K0@Z ENDP					; f_add
_TEXT	ENDS
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
?f@@YA_KXZ PROC						; f
; File C:\Users\libit\source\repos\REV_059\REV_059\REV_059.cpp
; Line 7
	mov	eax, -1867788817			; 90abcdefH
	mov	edx, 305419896				; 12345678H
; Line 8
	ret	0
?f@@YA_KXZ ENDP						; f
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt\stdio.h
; Line 954
	push	esi
; Line 958
	mov	esi, DWORD PTR __Format$[esp]
	push	1
	call	___acrt_iob_func
	add	esp, 4
; Line 643
	lea	ecx, DWORD PTR __Format$[esp+4]
	push	ecx
	push	0
	push	esi
	push	eax
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 960
	pop	esi
; Line 961
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt\stdio.h
; Line 643
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 644
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
; Line 88
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 89
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
