; Listing generated by Microsoft (R) Optimizing Compiler Version 19.26.28720.3 

	TITLE	C:\Users\libit\source\repos\REV_058A\REV_058A\REV_058A.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG31691 DB	'%d', 0aH, 00H
$SG31695 DB	'%d', 09H, 00H
$SG31710 DB	'Hello World!', 0aH, 00H
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	?comp@@YAHPBX0@Z				; comp
PUBLIC	?print1@@YAXH@Z					; print1
PUBLIC	?print11@@YAXH@Z				; print11
PUBLIC	?print2@@YAXHP6AXH@Z@Z				; print2
PUBLIC	_main
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	__xmm@00000009000000080000000700000006
PUBLIC	__xmm@fffffffc00000003fffffffe00000001
EXTRN	_qsort:PROC
EXTRN	___acrt_iob_func:PROC
EXTRN	___stdio_common_vfprintf:PROC
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT __xmm@fffffffc00000003fffffffe00000001
CONST	SEGMENT
__xmm@fffffffc00000003fffffffe00000001 DB 01H, 00H, 00H, 00H, 0feH, 0ffH, 0ffH
	DB	0ffH, 03H, 00H, 00H, 00H, 0fcH, 0ffH, 0ffH, 0ffH
CONST	ENDS
;	COMDAT __xmm@00000009000000080000000700000006
CONST	SEGMENT
__xmm@00000009000000080000000700000006 DB 06H, 00H, 00H, 00H, 07H, 00H, 00H
	DB	00H, 08H, 00H, 00H, 00H, 09H, 00H, 00H, 00H
CONST	ENDS
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_numbers$ = -48						; size = 48
_main	PROC
; File C:\Users\libit\source\repos\REV_058A\REV_058A\REV_058A.cpp
; Line 34
	sub	esp, 48					; 00000030H
	push	esi
; Line 35
	push	OFFSET $SG31710
	call	_printf
; Line 36
	movaps	xmm0, XMMWORD PTR __xmm@fffffffc00000003fffffffe00000001
; Line 40
	lea	eax, DWORD PTR _numbers$[esp+56]
	push	OFFSET ?comp@@YAHPBX0@Z			; comp
	push	4
	movups	XMMWORD PTR _numbers$[esp+64], xmm0
	push	12					; 0000000cH
	movaps	xmm0, XMMWORD PTR __xmm@00000009000000080000000700000006
	push	eax
	mov	DWORD PTR _numbers$[esp+88], -5		; fffffffbH
	movups	XMMWORD PTR _numbers$[esp+92], xmm0
	mov	DWORD PTR _numbers$[esp+108], -10	; fffffff6H
	mov	DWORD PTR _numbers$[esp+112], 100	; 00000064H
	mov	DWORD PTR _numbers$[esp+116], -11	; fffffff5H
	call	_qsort
	add	esp, 20					; 00000014H
	xor	esi, esi
	npad	2
$LL4@main:
; Line 25
	push	DWORD PTR _numbers$[esp+esi*4+52]
	push	OFFSET $SG31695
	call	_printf
; Line 42
	inc	esi
; Line 25
	add	esp, 8
; Line 42
	cmp	esi, 12					; 0000000cH
	jb	SHORT $LL4@main
; Line 48
	xor	eax, eax
	pop	esi
	add	esp, 48					; 00000030H
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_a$ = 8							; size = 4
_p$ = 12						; size = 4
?print2@@YAXHP6AXH@Z@Z PROC				; print2
; File C:\Users\libit\source\repos\REV_058A\REV_058A\REV_058A.cpp
; Line 30
	push	DWORD PTR _a$[esp-4]
	call	DWORD PTR _p$[esp]
	pop	ecx
; Line 31
	ret	0
?print2@@YAXHP6AXH@Z@Z ENDP				; print2
_TEXT	ENDS
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_a$ = 8							; size = 4
?print11@@YAXH@Z PROC					; print11
; File C:\Users\libit\source\repos\REV_058A\REV_058A\REV_058A.cpp
; Line 25
	push	DWORD PTR _a$[esp-4]
	push	OFFSET $SG31695
	call	_printf
	add	esp, 8
; Line 26
	ret	0
?print11@@YAXH@Z ENDP					; print11
_TEXT	ENDS
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_a$ = 8							; size = 4
?print1@@YAXH@Z PROC					; print1
; File C:\Users\libit\source\repos\REV_058A\REV_058A\REV_058A.cpp
; Line 21
	push	DWORD PTR _a$[esp-4]
	push	OFFSET $SG31691
	call	_printf
	add	esp, 8
; Line 22
	ret	0
?print1@@YAXH@Z ENDP					; print1
_TEXT	ENDS
; Function compile flags: /Ogtpy
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?comp@@YAHPBX0@Z PROC					; comp
; File C:\Users\libit\source\repos\REV_058A\REV_058A\REV_058A.cpp
; Line 9
	mov	eax, DWORD PTR _a$[esp-4]
	mov	ecx, DWORD PTR [eax]
; Line 10
	mov	eax, DWORD PTR _b$[esp-4]
	mov	edx, DWORD PTR [eax]
; Line 12
	xor	eax, eax
	cmp	ecx, edx
	je	SHORT $LN3@comp
; Line 13
	setg	al
	lea	eax, DWORD PTR [eax*2-1]
$LN3@comp:
; Line 15
	ret	0
?comp@@YAHPBX0@Z ENDP					; comp
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt\stdio.h
; Line 954
	push	esi
; Line 958
	mov	esi, DWORD PTR __Format$[esp]
	push	1
	call	___acrt_iob_func
	add	esp, 4
; Line 643
	lea	ecx, DWORD PTR __Format$[esp+4]
	push	ecx
	push	0
	push	esi
	push	eax
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 960
	pop	esi
; Line 961
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt\stdio.h
; Line 643
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 644
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
; Line 88
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 89
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
